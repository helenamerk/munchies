{
  "{\"sourceRoot\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"filename\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar db = _interopRequireWildcard(require(\"./queries\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\napp.get('/users', db.getUsers);\napp.get('/users/:id', db.getUserById);\napp.get('/friends/', db.getFriends);\napp.get('/friends/:id', db.getUserFriends);\napp.post('/users', db.createUser);\napp.put('/users/:id', db.updateUser);\napp[\"delete\"]('/users/:id', db.deleteUser);\napp.listen(process.env.PORT, function () {\n  return console.log(\"Example app listening on port \".concat(process.env.PORT, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJkYiIsImdldFVzZXJzIiwiZ2V0VXNlckJ5SWQiLCJnZXRGcmllbmRzIiwiZ2V0VXNlckZyaWVuZHMiLCJwb3N0IiwiY3JlYXRlVXNlciIsInB1dCIsInVwZGF0ZVVzZXIiLCJkZWxldGVVc2VyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx1QkFBUjtBQUVBRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGNBQVQ7QUFDSCxDQUZEO0FBSUFMLEdBQUcsQ0FBQ0UsR0FBSixDQUFRLFFBQVIsRUFBa0JJLEVBQUUsQ0FBQ0MsUUFBckI7QUFDQVAsR0FBRyxDQUFDRSxHQUFKLENBQVEsWUFBUixFQUFzQkksRUFBRSxDQUFDRSxXQUF6QjtBQUVBUixHQUFHLENBQUNFLEdBQUosQ0FBUSxXQUFSLEVBQXFCSSxFQUFFLENBQUNHLFVBQXhCO0FBQ0FULEdBQUcsQ0FBQ0UsR0FBSixDQUFRLGNBQVIsRUFBd0JJLEVBQUUsQ0FBQ0ksY0FBM0I7QUFFQVYsR0FBRyxDQUFDVyxJQUFKLENBQVMsUUFBVCxFQUFtQkwsRUFBRSxDQUFDTSxVQUF0QjtBQUNBWixHQUFHLENBQUNhLEdBQUosQ0FBUSxZQUFSLEVBQXNCUCxFQUFFLENBQUNRLFVBQXpCO0FBQ0FkLEdBQUcsVUFBSCxDQUFXLFlBQVgsRUFBeUJNLEVBQUUsQ0FBQ1MsVUFBNUI7QUFFQWYsR0FBRyxDQUFDZ0IsTUFBSixDQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBdkIsRUFBNkI7QUFBQSxTQUMzQkMsT0FBTyxDQUFDQyxHQUFSLHlDQUE2Q0osT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQXpELE9BRDJCO0FBQUEsQ0FBN0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hlbGVuYW1lcmsvaGFja2F0aG9ucy9wZW5uYXBwcy9tdW5jaGllcy9iYWNrZW5kLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2RvdGVudi9jb25maWcnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCAqIGFzIGRiIGZyb20gJy4vcXVlcmllcyc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShjb3JzKCkpO1xuXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnNlbmQoJ0hlbGxvIFdvcmxkIScpO1xufSk7XG5cbmFwcC5nZXQoJy91c2VycycsIGRiLmdldFVzZXJzKVxuYXBwLmdldCgnL3VzZXJzLzppZCcsIGRiLmdldFVzZXJCeUlkKVxuXG5hcHAuZ2V0KCcvZnJpZW5kcy8nLCBkYi5nZXRGcmllbmRzKVxuYXBwLmdldCgnL2ZyaWVuZHMvOmlkJywgZGIuZ2V0VXNlckZyaWVuZHMpXG5cbmFwcC5wb3N0KCcvdXNlcnMnLCBkYi5jcmVhdGVVc2VyKVxuYXBwLnB1dCgnL3VzZXJzLzppZCcsIGRiLnVwZGF0ZVVzZXIpXG5hcHAuZGVsZXRlKCcvdXNlcnMvOmlkJywgZGIuZGVsZXRlVXNlcilcblxuYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JULCAoKSA9PlxuICBjb25zb2xlLmxvZyhgRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgJHtwcm9jZXNzLmVudi5QT1JUfSFgKSxcbik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "get",
        "req",
        "res",
        "send",
        "db",
        "getUsers",
        "getUserById",
        "getFriends",
        "getUserFriends",
        "post",
        "createUser",
        "put",
        "updateUser",
        "deleteUser",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AAEAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT;AACH,CAFD;AAIAL,GAAG,CAACE,GAAJ,CAAQ,QAAR,EAAkBI,EAAE,CAACC,QAArB;AACAP,GAAG,CAACE,GAAJ,CAAQ,YAAR,EAAsBI,EAAE,CAACE,WAAzB;AAEAR,GAAG,CAACE,GAAJ,CAAQ,WAAR,EAAqBI,EAAE,CAACG,UAAxB;AACAT,GAAG,CAACE,GAAJ,CAAQ,cAAR,EAAwBI,EAAE,CAACI,cAA3B;AAEAV,GAAG,CAACW,IAAJ,CAAS,QAAT,EAAmBL,EAAE,CAACM,UAAtB;AACAZ,GAAG,CAACa,GAAJ,CAAQ,YAAR,EAAsBP,EAAE,CAACQ,UAAzB;AACAd,GAAG,UAAH,CAAW,YAAX,EAAyBM,EAAE,CAACS,UAA5B;AAEAf,GAAG,CAACgB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B;AAAA,SAC3BC,OAAO,CAACC,GAAR,yCAA6CJ,OAAO,CAACC,GAAR,CAAYC,IAAzD,OAD2B;AAAA,CAA7B",
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "sourcesContent": [
        "import 'dotenv/config';\nimport express from 'express';\nimport cors from 'cors';\nimport * as db from './queries';\n\nconst app = express();\n\napp.use(cors());\n\napp.get('/', (req, res) => {\n    res.send('Hello World!');\n});\n\napp.get('/users', db.getUsers)\napp.get('/users/:id', db.getUserById)\n\napp.get('/friends/', db.getFriends)\napp.get('/friends/:id', db.getUserFriends)\n\napp.post('/users', db.createUser)\napp.put('/users/:id', db.updateUser)\napp.delete('/users/:id', db.deleteUser)\n\napp.listen(process.env.PORT, () =>\n  console.log(`Example app listening on port ${process.env.PORT}!`),\n);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567815280000
  },
  "{\"sourceRoot\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"filename\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
        "sourceFileName": "queries.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar Pool = require('pg').Pool;\n\nvar pool = new Pool({\n  user: \"\".concat(process.env.USER),\n  host: \"\".concat(process.env.HOST),\n  database: \"\".concat(process.env.DATABSE),\n  password: \"\".concat(process.env.PASSWORD),\n  port: \"\".concat(process.env.PG_PORT)\n}); // eventaully move config details to a seperate file with restrictive permission\n\nvar getUsers = function getUsers(request, response) {\n  pool.query('SELECT * FROM users ORDER BY id ASC', function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nvar getUserById = function getUserById(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('SELECT * FROM users WHERE id = $1', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nvar createUser = function createUser(request, response) {\n  var _request$body = request.body,\n      name = _request$body.name,\n      email = _request$body.email;\n  pool.query('INSERT INTO users (name, email) VALUES ($1, $2)', [name, email], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(201).send(\"User added with ID: \".concat(result.insertId));\n  });\n};\n\nvar updateUser = function updateUser(request, response) {\n  var id = parseInt(request.params.id);\n  var _request$body2 = request.body,\n      name = _request$body2.name,\n      email = _request$body2.email;\n  pool.query('UPDATE users SET name = $1, email = $2 WHERE id = $3', [name, email, id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).send(\"User modified with ID: \".concat(id));\n  });\n};\n\nvar deleteUser = function deleteUser(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('DELETE FROM users WHERE id = $1', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).send(\"User deleted with ID: \".concat(id));\n  });\n};\n\nvar getUserFriends = function getUserFriends(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('SELECT * FROM relationships WHERE user_one = $1 OR user_two = $1', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nvar getFriends = function getFriends(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('SELECT * FROM relationships', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nmodule.exports = {\n  getUsers: getUsers,\n  getUserById: getUserById,\n  getFriends: getFriends,\n  getUserFriends: getUserFriends,\n  createUser: createUser,\n  updateUser: updateUser,\n  deleteUser: deleteUser\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJpZXMuanMiXSwibmFtZXMiOlsiUG9vbCIsInJlcXVpcmUiLCJwb29sIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJVU0VSIiwiaG9zdCIsIkhPU1QiLCJkYXRhYmFzZSIsIkRBVEFCU0UiLCJwYXNzd29yZCIsIlBBU1NXT1JEIiwicG9ydCIsIlBHX1BPUlQiLCJnZXRVc2VycyIsInJlcXVlc3QiLCJyZXNwb25zZSIsInF1ZXJ5IiwiZXJyb3IiLCJyZXN1bHRzIiwic3RhdHVzIiwianNvbiIsInJvd3MiLCJnZXRVc2VyQnlJZCIsImlkIiwicGFyc2VJbnQiLCJwYXJhbXMiLCJjcmVhdGVVc2VyIiwiYm9keSIsIm5hbWUiLCJlbWFpbCIsInNlbmQiLCJyZXN1bHQiLCJpbnNlcnRJZCIsInVwZGF0ZVVzZXIiLCJkZWxldGVVc2VyIiwiZ2V0VXNlckZyaWVuZHMiLCJnZXRGcmllbmRzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY0QsSUFBM0I7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHLElBQUlGLElBQUosQ0FBUztBQUNwQkcsRUFBQUEsSUFBSSxZQUFLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBakIsQ0FEZ0I7QUFFcEJDLEVBQUFBLElBQUksWUFBS0gsT0FBTyxDQUFDQyxHQUFSLENBQVlHLElBQWpCLENBRmdCO0FBR3BCQyxFQUFBQSxRQUFRLFlBQUtMLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxPQUFqQixDQUhZO0FBSXBCQyxFQUFBQSxRQUFRLFlBQUtQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxRQUFqQixDQUpZO0FBS3BCQyxFQUFBQSxJQUFJLFlBQUtULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUyxPQUFqQjtBQUxnQixDQUFULENBQWIsQyxDQVFBOztBQUVBLElBQU1DLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUNDLE9BQUQsRUFBVUMs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LGNBQWMsRUFBZEEsY0FKZTtBQUtmVCxFQUFBQSxVQUFVLEVBQVZBLFVBTGU7QUFNZk8sRUFBQUEsVUFBVSxFQUFWQSxVQU5lO0FBT2ZDLEVBQUFBLFVBQVUsRUFBVkE7QUFQZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGVsZW5hbWVyay9oYWNrYXRob25zL3Blbm5hcHBzL211bmNoaWVzL2JhY2tlbmQtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnZG90ZW52L2NvbmZpZyc7XG5cbmNvbnN0IFBvb2wgPSByZXF1aXJlKCdwZycpLlBvb2xcbmNvbnN0IHBvb2wgPSBuZXcgUG9vbCh7XG4gIHVzZXI6IGAke3Byb2Nlc3MuZW52LlVTRVJ9YCxcbiAgaG9zdDogYCR7cHJvY2Vzcy5lbnYuSE9TVH1gLFxuICBkYXRhYmFzZTogYCR7cHJvY2Vzcy5lbnYuREFUQUJTRX1gLFxuICBwYXNzd29yZDogYCR7cHJvY2Vzcy5lbnYuUEFTU1dPUkR9YCxcbiAgcG9ydDogYCR7cHJvY2Vzcy5lbnYuUEdfUE9SVH1gLFxufSlcblxuLy8gZXZlbnRhdWxseSBtb3ZlIGNvbmZpZyBkZXRhaWxzIHRvIGEgc2VwZXJhdGUgZmlsZSB3aXRoIHJlc3RyaWN0aXZlIHBlcm1pc3Npb25cblxuY29uc3QgZ2V0VXNlcnMgPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgcG9vbC5xdWVyeSgnU0VMRUNUICogRlJPTSB1c2VycyBPUkRFUiBCWSBpZCBBU0MnLCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24ocmVzdWx0cy5yb3dzKVxuICB9KVxufVxuXG5jb25zdCBnZXRVc2VyQnlJZCA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCBpZCA9IHBhcnNlSW50KHJlcXVlc3QucGFyYW1zLmlkKVxuXG4gIHBvb2wucXVlcnkoJ1NFTEVDVCAqIEZST00gdXNlcnMgV0hFUkUgaWQgPSAkMScsIFtpZF0sIChlcnJvciwgcmVzdWx0cykgPT4ge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbihyZXN1bHRzLnJvd3MpXG4gIH0pXG59XG5cbmNvbnN0IGNyZWF0ZVVzZXIgPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgY29uc3QgeyBuYW1lLCBlbWFpbCB9ID0gcmVxdWVzdC5ib2R5XG5cbiAgcG9vbC5xdWVyeSgnSU5TRVJUIElOVE8gdXNlcnMgKG5hbWUsIGVtYWlsKSBWQUxVRVMgKCQxLCAkMiknLCBbbmFtZSwgZW1haWxdLCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJlc3BvbnNlLnN0YXR1cygyMDEpLnNlbmQoYFVzZXIgYWRkZWQgd2l0aCBJRDogJHtyZXN1bHQuaW5zZXJ0SWR9YClcbiAgfSlcbn1cblxuY29uc3QgdXBkYXRlVXNlciA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCBpZCA9IHBhcnNlSW50KHJlcXVlc3QucGFyYW1zLmlkKVxuICBjb25zdCB7IG5hbWUsIGVtYWlsIH0gPSByZXF1ZXN0LmJvZHlcblxuICBwb29sLnF1ZXJ5KFxuICAgICdVUERBVEUgdXNlcnMgU0VUIG5hbWUgPSAkMSwgZW1haWwgPSAkMiBXSEVSRSBpZCA9ICQzJyxcbiAgICBbbmFtZSwgZW1haWwsIGlkXSxcbiAgICAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgfVxuICAgICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuc2VuZChgVXNlciBtb2RpZmllZCB3aXRoIElEOiAke2lkfWApXG4gICAgfVxuICApXG59XG5cblxuY29uc3QgZGVsZXRlVXNlciA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCBpZCA9IHBhcnNlSW50KHJlcXVlc3QucGFyYW1zLmlkKVxuXG4gIHBvb2wucXVlcnkoJ0RFTEVURSBGUk9NIHVzZXJzIFdIRVJFIGlkID0gJDEnLCBbaWRdLCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLnNlbmQoYFVzZXIgZGVsZXRlZCB3aXRoIElEOiAke2lkfWApXG4gIH0pXG59XG5cbmNvbnN0IGdldFVzZXJGcmllbmRzID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IGlkID0gcGFyc2VJbnQocmVxdWVzdC5wYXJhbXMuaWQpXG5cbiAgcG9vbC5xdWVyeSgnU0VMRUNUICogRlJPTSByZWxhdGlvbnNoaXBzIFdIRVJFIHVzZXJfb25lID0gJDEgT1IgdXNlcl90d28gPSAkMScsIFtpZF0sIChlcnJvciwgcmVzdWx0cykgPT4ge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbihyZXN1bHRzLnJvd3MpXG4gIH0pXG59XG5cbmNvbnN0IGdldEZyaWVuZHMgPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgY29uc3QgaWQgPSBwYXJzZUludChyZXF1ZXN0LnBhcmFtcy5pZClcblxuICBwb29sLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHJlbGF0aW9uc2hpcHMnLCBbaWRdLCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24ocmVzdWx0cy5yb3dzKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0VXNlcnMsXG4gIGdldFVzZXJCeUlkLFxuICBnZXRGcmllbmRzLFxuICBnZXRVc2VyRnJpZW5kcyxcbiAgY3JlYXRlVXNlcixcbiAgdXBkYXRlVXNlcixcbiAgZGVsZXRlVXNlcixcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "queries.js"
      ],
      "names": [
        "Pool",
        "require",
        "pool",
        "user",
        "process",
        "env",
        "USER",
        "host",
        "HOST",
        "database",
        "DATABSE",
        "password",
        "PASSWORD",
        "port",
        "PG_PORT",
        "getUsers",
        "request",
        "response",
        "query",
        "error",
        "results",
        "status",
        "json",
        "rows",
        "getUserById",
        "id",
        "parseInt",
        "params",
        "createUser",
        "body",
        "name",
        "email",
        "send",
        "result",
        "insertId",
        "updateUser",
        "deleteUser",
        "getUserFriends",
        "getFriends",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "sourcesContent": [
        "import 'dotenv/config';\n\nconst Pool = require('pg').Pool\nconst pool = new Pool({\n  user: `${process.env.USER}`,\n  host: `${process.env.HOST}`,\n  database: `${process.env.DATABSE}`,\n  password: `${process.env.PASSWORD}`,\n  port: `${process.env.PG_PORT}`,\n})\n\n// eventaully move config details to a seperate file with restrictive permission\n\nconst getUsers = (request, response) => {\n  pool.query('SELECT * FROM users ORDER BY id ASC', (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nconst getUserById = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('SELECT * FROM users WHERE id = $1', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nconst createUser = (request, response) => {\n  const { name, email } = request.body\n\n  pool.query('INSERT INTO users (name, email) VALUES ($1, $2)', [name, email], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(201).send(`User added with ID: ${result.insertId}`)\n  })\n}\n\nconst updateUser = (request, response) => {\n  const id = parseInt(request.params.id)\n  const { name, email } = request.body\n\n  pool.query(\n    'UPDATE users SET name = $1, email = $2 WHERE id = $3',\n    [name, email, id],\n    (error, results) => {\n      if (error) {\n        throw error\n      }\n      response.status(200).send(`User modified with ID: ${id}`)\n    }\n  )\n}\n\n\nconst deleteUser = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('DELETE FROM users WHERE id = $1', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).send(`User deleted with ID: ${id}`)\n  })\n}\n\nconst getUserFriends = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('SELECT * FROM relationships WHERE user_one = $1 OR user_two = $1', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nconst getFriends = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('SELECT * FROM relationships', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nmodule.exports = {\n  getUsers,\n  getUserById,\n  getFriends,\n  getUserFriends,\n  createUser,\n  updateUser,\n  deleteUser,\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567815026000
  }
}