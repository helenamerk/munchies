{
  "{\"sourceRoot\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"filename\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expoServerSdk = _interopRequireDefault(require(\"expo-server-sdk\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar db = _interopRequireWildcard(require(\"./queries\"));\n\nvar _pool = _interopRequireDefault(require(\"./pool\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\nvar expo = new _expoServerSdk[\"default\"]();\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\napp.get('/users', db.getUsers);\napp.get('/users/:id', db.getUserById);\napp.get('/friends/', db.getFriends);\napp.get('/friends/:id', db.getUserFriends);\napp.post('/users', db.createUser);\napp.put('/users/:id', db.updateUser);\napp[\"delete\"]('/users/:id', db.deleteUser);\napp.post('/token', db.registerDeviceToken);\n\nvar handlePushTokens = function handlePushTokens(message) {\n  var notifications = [];\n\n  _pool[\"default\"].query('SELECT push_token FROM registered_devices', function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    console.log('selected just tokens');\n    console.log(results.rows);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = results.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var pushToken = _step.value;\n        pushToken = pushToken['push_token'];\n        console.log(pushToken);\n\n        if (!_expoServerSdk[\"default\"].isExpoPushToken(pushToken)) {\n          console.error(\"Push token \".concat(pushToken, \" is not a valid Expo push token\"));\n          continue;\n        }\n\n        notifications.push({\n          to: pushToken,\n          sound: 'default',\n          title: 'Message received!',\n          body: message,\n          data: {\n            message: message\n          }\n        });\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var chunks = expo.chunkPushNotifications(notifications);\n\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, chunk, receipts;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context.prev = 3;\n              _iterator2 = chunks[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context.next = 20;\n                break;\n              }\n\n              chunk = _step2.value;\n              _context.prev = 7;\n              _context.next = 10;\n              return expo.sendPushNotificationsAsync(chunk);\n\n            case 10:\n              receipts = _context.sent;\n              console.log(receipts);\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](7);\n              console.error(_context.t0);\n\n            case 17:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 5;\n              break;\n\n            case 20:\n              _context.next = 26;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 26:\n              _context.prev = 26;\n              _context.prev = 27;\n\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n\n            case 29:\n              _context.prev = 29;\n\n              if (!_didIteratorError2) {\n                _context.next = 32;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 32:\n              return _context.finish(29);\n\n            case 33:\n              return _context.finish(26);\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 22, 26, 34], [7, 14], [27,, 29, 33]]);\n    }))();\n  }); //response.status(200).json(results.rows)\n\n};\n\napp.post('/message', function (req, res) {\n  handlePushTokens(req.body.message);\n  console.log(\"Received message, \".concat(req.body.message));\n  res.send(\"Received message, \".concat(req.body.message));\n});\napp.listen(process.env.PORT, function () {\n  return console.log(\"Example app listening on port \".concat(process.env.PORT, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImV4cG8iLCJFeHBvIiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwiZGIiLCJnZXRVc2VycyIsImdldFVzZXJCeUlkIiwiZ2V0RnJpZW5kcyIsImdldFVzZXJGcmllbmRzIiwicG9zdCIsImNyZWF0ZVVzZXIiLCJwdXQiLCJ1cGRhdGVVc2VyIiwiZGVsZXRlVXNlciIsInJlZ2lzdGVyRGV2aWNlVG9rZW4iLCJoYW5kbGVQdXNoVG9rZW5zIiwibWVzc2FnZSIsIm5vdGlmaWNhdGlvbnMiLCJwb29sIiwicXVlcnkiLCJlcnJvciIsInJlc3VsdHMiLCJjb25zb2xlIiwibG9nIiwicm93cyIsInB1c2hUb2tlbiIsImlzRXhwb1B1c2hUb2tlbiIsInB1c2giLCJ0byIsInNvdW5kIiwidGl0bGUiLCJib2R5IiwiZGF0YSIsImNodW5rcyIsImNodW5rUHVzaE5vdGlmaWNhdGlvbnMiLCJjaHVuayIsInNlbmRQdXNoTm90aWZpY2F0aW9uc0FzeW5jIiwicmVjZWlwdHMiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQUlDLHlCQUFKLEVBQWI7QUFFQUYsR0FBRyxDQUFDRyxHQUFKLENBQVEsdUJBQVI7QUFDQUgsR0FBRyxDQUFDRyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQUwsR0FBRyxDQUFDTSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxjQUFUO0FBQ0gsQ0FGRDtBQUlBVCxHQUFHLENBQUNNLEdBQUosQ0FBUSxRQUFSLEVBQWtCSSxFQUFFLENBQUND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QUEsS0FBRDtBQVVILEdBbkNELEVBRmtDLENBc0NsQzs7QUFDSCxDQXZDRDs7QUF5Q0ExQixHQUFHLENBQUNlLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNSLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CYSxFQUFBQSxnQkFBZ0IsQ0FBQ2QsR0FBRyxDQUFDOEIsSUFBSixDQUFTZixPQUFWLENBQWhCO0FBQ0FNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiw2QkFBaUN0QixHQUFHLENBQUM4QixJQUFKLENBQVNmLE9BQTFDO0FBQ0FkLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSiw2QkFBOEJGLEdBQUcsQ0FBQzhCLElBQUosQ0FBU2YsT0FBdkM7QUFDSCxDQUpEO0FBT0F0QixHQUFHLENBQUM0QyxNQUFKLENBQVdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF2QixFQUE2QjtBQUFBLFNBQzNCbkIsT0FBTyxDQUFDQyxHQUFSLHlDQUE2Q2dCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF6RCxPQUQyQjtBQUFBLENBQTdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9oZWxlbmFtZXJrL2hhY2thdGhvbnMvcGVubmFwcHMvbXVuY2hpZXMvYmFja2VuZC1hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdkb3RlbnYvY29uZmlnJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IEV4cG8gZnJvbSAnZXhwby1zZXJ2ZXItc2RrJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0ICogYXMgZGIgZnJvbSAnLi9xdWVyaWVzJztcbmltcG9ydCBwb29sIGZyb20gJy4vcG9vbCc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IGV4cG8gPSBuZXcgRXhwbygpO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKCdIZWxsbyBXb3JsZCEnKTtcbn0pO1xuXG5hcHAuZ2V0KCcvdXNlcnMnLCBkYi5nZXRVc2VycylcbmFwcC5nZXQoJy91c2Vycy86aWQnLCBkYi5nZXRVc2VyQnlJZClcblxuYXBwLmdldCgnL2ZyaWVuZHMvJywgZGIuZ2V0RnJpZW5kcylcbmFwcC5nZXQoJy9mcmllbmRzLzppZCcsIGRiLmdldFVzZXJGcmllbmRzKVxuXG5hcHAucG9zdCgnL3VzZXJzJywgZGIuY3JlYXRlVXNlcilcbmFwcC5wdXQoJy91c2Vycy86aWQnLCBkYi51cGRhdGVVc2VyKVxuYXBwLmRlbGV0ZSgnL3VzZXJzLzppZCcsIGRiLmRlbGV0ZVVzZXIpXG5cbmFwcC5wb3N0KCcvdG9rZW4nLCBkYi5yZWdpc3RlckRldmljZVRva2VuKVxuXG5jb25zdCBoYW5kbGVQdXNoVG9rZW5zID0gKG1lc3NhZ2UpID0+IHtcbiAgICBsZXQgbm90aWZpY2F0aW9ucyA9IFtdO1xuICAgIHBvb2wucXVlcnkoJ1NFTEVDVCBwdXNoX3Rva2VuIEZST00gcmVnaXN0ZXJlZF9kZXZpY2VzJywgKGVycm9yLCByZXN1bHRzKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHRocm93IGVycm9yXG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlLmxvZygnc2VsZWN0ZWQganVzdCB0b2tlbnMnKVxuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzLnJvd3MpXG5cbiAgICAgICAgZm9yIChsZXQgcHVzaFRva2VuIG9mIHJlc3VsdHMucm93cykge1xuICAgICAgICAgICAgcHVzaFRva2VuID0gcHVzaFRva2VuWydwdXNoX3Rva2VuJ11cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHB1c2hUb2tlbilcbiAgICAgICAgICAgIGlmICghRXhwby5pc0V4cG9QdXNoVG9rZW4ocHVzaFRva2VuKSkge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBQdXNoIHRva2VuICR7cHVzaFRva2VufSBpcyBub3QgYSB2YWxpZCBFeHBvIHB1c2ggdG9rZW5gKTtcbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub3RpZmljYXRpb25zLnB1c2goe1xuICAgICAgICAgICAgICB0bzogcHVzaFRva2VuLFxuICAgICAgICAgICAgICBzb3VuZDogJ2RlZmF1bHQnLFxuICAgICAgICAgICAgICB0aXRsZTogJ01lc3NhZ2UgcmVjZWl2ZWQhJyxcbiAgICAgICAgICAgICAgYm9keTogbWVzc2FnZSxcbiAgICAgICAgICAgICAgZGF0YTogeyBtZXNzYWdlIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuXG4gICAgICAgIGxldCBjaHVua3MgPSBleHBvLmNodW5rUHVzaE5vdGlmaWNhdGlvbnMobm90aWZpY2F0aW9ucyk7XG4gICAgICAgIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGxldCBjaHVuayBvZiBjaHVua3MpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbGV0IHJlY2VpcHRzID0gYXdhaXQgZXhwby5zZW5kUHVzaE5vdGlmaWNhdGlvbnNBc3luYyhjaHVuayk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVjZWlwdHMpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9KTtcbiAgICAvL3Jlc3BvbnNlLnN0YXR1cygyMDApLmpzb24ocmVzdWx0cy5yb3dzKVxufVxuXG5hcHAucG9zdCgnL21lc3NhZ2UnLCAocmVxLCByZXMpID0+IHtcbiAgICBoYW5kbGVQdXNoVG9rZW5zKHJlcS5ib2R5Lm1lc3NhZ2UpO1xuICAgIGNvbnNvbGUubG9nKGBSZWNlaXZlZCBtZXNzYWdlLCAke3JlcS5ib2R5Lm1lc3NhZ2V9YCk7XG4gICAgcmVzLnNlbmQoYFJlY2VpdmVkIG1lc3NhZ2UsICR7cmVxLmJvZHkubWVzc2FnZX1gKTtcbn0pO1xuXG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCwgKCkgPT5cbiAgY29uc29sZS5sb2coYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cHJvY2Vzcy5lbnYuUE9SVH0hYCksXG4pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "expo",
        "Expo",
        "use",
        "express",
        "json",
        "get",
        "req",
        "res",
        "send",
        "db",
        "getUsers",
        "getUserById",
        "getFriends",
        "getUserFriends",
        "post",
        "createUser",
        "put",
        "updateUser",
        "deleteUser",
        "registerDeviceToken",
        "handlePushTokens",
        "message",
        "notifications",
        "pool",
        "query",
        "error",
        "results",
        "console",
        "log",
        "rows",
        "pushToken",
        "isExpoPushToken",
        "push",
        "to",
        "sound",
        "title",
        "body",
        "data",
        "chunks",
        "chunkPushNotifications",
        "chunk",
        "sendPushNotificationsAsync",
        "receipts",
        "listen",
        "process",
        "env",
        "PORT"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "sourcesContent": [
        "import 'dotenv/config';\nimport express from 'express';\nimport Expo from 'expo-server-sdk';\nimport cors from 'cors';\nimport * as db from './queries';\nimport pool from './pool';\n\nconst app = express();\nconst expo = new Expo();\n\napp.use(cors());\napp.use(express.json());\n\napp.get('/', (req, res) => {\n    res.send('Hello World!');\n});\n\napp.get('/users', db.getUsers)\napp.get('/users/:id', db.getUserById)\n\napp.get('/friends/', db.getFriends)\napp.get('/friends/:id', db.getUserFriends)\n\napp.post('/users', db.createUser)\napp.put('/users/:id', db.updateUser)\napp.delete('/users/:id', db.deleteUser)\n\napp.post('/token', db.registerDeviceToken)\n\nconst handlePushTokens = (message) => {\n    let notifications = [];\n    pool.query('SELECT push_token FROM registered_devices', (error, results) => {\n        if (error) {\n          throw error\n        }\n\n        console.log('selected just tokens')\n        console.log(results.rows)\n\n        for (let pushToken of results.rows) {\n            pushToken = pushToken['push_token']\n            console.log(pushToken)\n            if (!Expo.isExpoPushToken(pushToken)) {\n              console.error(`Push token ${pushToken} is not a valid Expo push token`);\n              continue;\n            }\n            notifications.push({\n              to: pushToken,\n              sound: 'default',\n              title: 'Message received!',\n              body: message,\n              data: { message }\n            })\n          }\n\n        let chunks = expo.chunkPushNotifications(notifications);\n        (async () => {\n            for (let chunk of chunks) {\n            try {\n                let receipts = await expo.sendPushNotificationsAsync(chunk);\n                console.log(receipts);\n            } catch (error) {\n                console.error(error);\n            }\n            }\n        })();\n    });\n    //response.status(200).json(results.rows)\n}\n\napp.post('/message', (req, res) => {\n    handlePushTokens(req.body.message);\n    console.log(`Received message, ${req.body.message}`);\n    res.send(`Received message, ${req.body.message}`);\n});\n\n\napp.listen(process.env.PORT, () =>\n  console.log(`Example app listening on port ${process.env.PORT}!`),\n);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567849951000
  },
  "{\"sourceRoot\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"filename\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/queries.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
        "sourceFileName": "queries.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar Pool = _interopRequireWildcard(require(\"pg\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar pool = new Pool.Pool({\n  user: \"\".concat(process.env.USER),\n  host: \"\".concat(process.env.HOST),\n  database: \"\".concat(process.env.DATABASE),\n  password: \"\".concat(process.env.PASSWORD),\n  port: \"\".concat(process.env.PG_PORT)\n}); // eventaully move config details to a seperate file with restrictive permission\n\nvar getUsers = function getUsers(request, response) {\n  pool.query('SELECT * FROM users ORDER BY id ASC', function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nvar getUserById = function getUserById(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('SELECT * FROM users WHERE id = $1', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nvar createUser = function createUser(request, response) {\n  var user = request.body.user;\n  console.log(user.name);\n  console.log(user.email);\n  pool.query('INSERT INTO users (name, email) VALUES ($1, $2) RETURNING ID', [user.name, user.email], function (error, results) {\n    if (error) {\n      console.log(error);\n      console.log('not allowed');\n      throw error;\n    }\n\n    console.log('HERE');\n    console.log(results);\n    console.log(results.rows[0].id);\n    console.log('---------');\n    response.status(201).json({\n      user_id: results.rows[0].id\n    });\n  });\n};\n\nvar updateUser = function updateUser(request, response) {\n  var id = parseInt(request.params.id);\n  var _request$body = request.body,\n      name = _request$body.name,\n      email = _request$body.email;\n  pool.query('UPDATE users SET name = $1, email = $2 WHERE id = $3', [name, email, id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).send(\"User modified with ID: \".concat(id));\n  });\n};\n\nvar deleteUser = function deleteUser(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('DELETE FROM users WHERE id = $1', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).send(\"User deleted with ID: \".concat(id));\n  });\n};\n\nvar getUserFriends = function getUserFriends(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('SELECT * FROM relationships WHERE user_one = $1 OR user_two = $1', [id], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n};\n\nvar getFriends = function getFriends(request, response) {\n  var id = parseInt(request.params.id);\n  pool.query('SELECT * FROM relationships', function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    response.status(200).json(results.rows);\n  });\n}; // Alert Handlings\n\n\nvar registerDeviceToken = function registerDeviceToken(req, res) {\n  var push_token = req.body.token.value;\n  var user_id = req.body.user_id.value;\n  console.log(push_token);\n  pool.query('INSERT INTO registered_devices (user_id, push_token) VALUES ($1, $2) RETURNING ID', [user_id, push_token], function (error, results) {\n    if (error) {\n      throw error;\n    }\n\n    console.log('HERE');\n    console.log(results);\n    console.log(results.rows[0].id);\n    console.log('---------');\n    res.status(201).send(\"Device token added with ID: \".concat(results.rows[0].id));\n  });\n};\n\nmodule.exports = {\n  getUsers: getUsers,\n  getUserById: getUserById,\n  getFriends: getFriends,\n  getUserFriends: getUserFriends,\n  createUser: createUser,\n  updateUser: updateUser,\n  deleteUser: deleteUser,\n  registerDeviceToken: registerDeviceToken\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "queries.js"
      ],
      "names": [
        "pool",
        "Pool",
        "user",
        "process",
        "env",
        "USER",
        "host",
        "HOST",
        "database",
        "DATABASE",
        "password",
        "PASSWORD",
        "port",
        "PG_PORT",
        "getUsers",
        "request",
        "response",
        "query",
        "error",
        "results",
        "status",
        "json",
        "rows",
        "getUserById",
        "id",
        "parseInt",
        "params",
        "createUser",
        "body",
        "console",
        "log",
        "name",
        "email",
        "user_id",
        "updateUser",
        "send",
        "deleteUser",
        "getUserFriends",
        "getFriends",
        "registerDeviceToken",
        "req",
        "res",
        "push_token",
        "token",
        "value",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "sourcesContent": [
        "import 'dotenv/config';\n\nimport * as Pool from 'pg';\n\nconst pool = new Pool.Pool({\n  user: `${process.env.USER}`,\n  host: `${process.env.HOST}`,\n  database: `${process.env.DATABASE}`,\n  password: `${process.env.PASSWORD}`,\n  port: `${process.env.PG_PORT}`,\n});\n\n// eventaully move config details to a seperate file with restrictive permission\n\nconst getUsers = (request, response) => {\n  pool.query('SELECT * FROM users ORDER BY id ASC', (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nconst getUserById = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('SELECT * FROM users WHERE id = $1', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nconst createUser = (request, response) => {\n  const { user } = request.body\n  console.log(user.name)\n  console.log(user.email)\n\n  pool.query('INSERT INTO users (name, email) VALUES ($1, $2) RETURNING ID', [user.name, user.email], (error, results) => {\n    if (error) {\n      console.log(error)\n      console.log('not allowed')\n      throw error\n    }\n    console.log('HERE')\n    console.log(results)\n    console.log(results.rows[0].id)\n    console.log('---------')\n    response.status(201).json({ user_id: results.rows[0].id});\n  })\n}\n\nconst updateUser = (request, response) => {\n  const id = parseInt(request.params.id)\n  const { name, email } = request.body\n\n  pool.query(\n    'UPDATE users SET name = $1, email = $2 WHERE id = $3',\n    [name, email, id],\n    (error, results) => {\n      if (error) {\n        throw error\n      }\n      response.status(200).send(`User modified with ID: ${id}`)\n    }\n  )\n}\n\n\nconst deleteUser = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('DELETE FROM users WHERE id = $1', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).send(`User deleted with ID: ${id}`)\n  })\n}\n\nconst getUserFriends = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('SELECT * FROM relationships WHERE user_one = $1 OR user_two = $1', [id], (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\nconst getFriends = (request, response) => {\n  const id = parseInt(request.params.id)\n\n  pool.query('SELECT * FROM relationships', (error, results) => {\n    if (error) {\n      throw error\n    }\n    response.status(200).json(results.rows)\n  })\n}\n\n// Alert Handlings\n\nconst registerDeviceToken = (req, res) => {\n    let push_token = req.body.token.value\n    let user_id = req.body.user_id.value\n    console.log(push_token)\n    pool.query('INSERT INTO registered_devices (user_id, push_token) VALUES ($1, $2) RETURNING ID', [user_id, push_token], (error, results) => {\n      if (error) {\n        throw error\n      }\n      console.log('HERE')\n      console.log(results)\n      console.log(results.rows[0].id)\n      console.log('---------')\n      res.status(201).send(`Device token added with ID: ${results.rows[0].id}`)\n    })\n}\n\nmodule.exports = {\n  getUsers,\n  getUserById,\n  getFriends,\n  getUserFriends,\n  createUser,\n  updateUser,\n  deleteUser,\n  registerDeviceToken,\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567847426000
  },
  "{\"sourceRoot\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"filename\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/pool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/helenamerk/hackathons/pennapps/munchies/backend-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/pool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/pool.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src/pool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
        "sourceFileName": "pool.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar Pool = _interopRequireWildcard(require(\"pg\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar pool = new Pool.Pool({\n  user: \"\".concat(process.env.USER),\n  host: \"\".concat(process.env.HOST),\n  database: \"\".concat(process.env.DATABASE),\n  password: \"\".concat(process.env.PASSWORD),\n  port: \"\".concat(process.env.PG_PORT)\n});\nvar _default = pool;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvb2wuanMiXSwibmFtZXMiOlsicG9vbCIsIlBvb2wiLCJ1c2VyIiwicHJvY2VzcyIsImVudiIsIlVTRVIiLCJob3N0IiwiSE9TVCIsImRhdGFiYXNlIiwiREFUQUJBU0UiLCJwYXNzd29yZCIsIlBBU1NXT1JEIiwicG9ydCIsIlBHX1BPUlQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHLElBQUlDLElBQUksQ0FBQ0EsSUFBVCxDQUFjO0FBQ3pCQyxFQUFBQSxJQUFJLFlBQUtDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFqQixDQURxQjtBQUV6QkMsRUFBQUEsSUFBSSxZQUFLSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsSUFBakIsQ0FGcUI7QUFHekJDLEVBQUFBLFFBQVEsWUFBS0wsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFFBQWpCLENBSGlCO0FBSXpCQyxFQUFBQSxRQUFRLFlBQUtQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxRQUFqQixDQUppQjtBQUt6QkMsRUFBQUEsSUFBSSxZQUFLVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVMsT0FBakI7QUFMcUIsQ0FBZCxDQUFiO2VBUWViLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hlbGVuYW1lcmsvaGFja2F0aG9ucy9wZW5uYXBwcy9tdW5jaGllcy9iYWNrZW5kLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBQb29sIGZyb20gJ3BnJztcblxuY29uc3QgcG9vbCA9IG5ldyBQb29sLlBvb2woe1xuICB1c2VyOiBgJHtwcm9jZXNzLmVudi5VU0VSfWAsXG4gIGhvc3Q6IGAke3Byb2Nlc3MuZW52LkhPU1R9YCxcbiAgZGF0YWJhc2U6IGAke3Byb2Nlc3MuZW52LkRBVEFCQVNFfWAsXG4gIHBhc3N3b3JkOiBgJHtwcm9jZXNzLmVudi5QQVNTV09SRH1gLFxuICBwb3J0OiBgJHtwcm9jZXNzLmVudi5QR19QT1JUfWAsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcG9vbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pool.js"
      ],
      "names": [
        "pool",
        "Pool",
        "user",
        "process",
        "env",
        "USER",
        "host",
        "HOST",
        "database",
        "DATABASE",
        "password",
        "PASSWORD",
        "port",
        "PG_PORT"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAT,CAAc;AACzBC,EAAAA,IAAI,YAAKC,OAAO,CAACC,GAAR,CAAYC,IAAjB,CADqB;AAEzBC,EAAAA,IAAI,YAAKH,OAAO,CAACC,GAAR,CAAYG,IAAjB,CAFqB;AAGzBC,EAAAA,QAAQ,YAAKL,OAAO,CAACC,GAAR,CAAYK,QAAjB,CAHiB;AAIzBC,EAAAA,QAAQ,YAAKP,OAAO,CAACC,GAAR,CAAYO,QAAjB,CAJiB;AAKzBC,EAAAA,IAAI,YAAKT,OAAO,CAACC,GAAR,CAAYS,OAAjB;AALqB,CAAd,CAAb;eAQeb,I",
      "sourceRoot": "/Users/helenamerk/hackathons/pennapps/munchies/backend-api/src",
      "sourcesContent": [
        "import * as Pool from 'pg';\n\nconst pool = new Pool.Pool({\n  user: `${process.env.USER}`,\n  host: `${process.env.HOST}`,\n  database: `${process.env.DATABASE}`,\n  password: `${process.env.PASSWORD}`,\n  port: `${process.env.PG_PORT}`,\n});\n\nexport default pool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567845088000
  }
}